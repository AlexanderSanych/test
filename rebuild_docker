if [ "$(docker images -q san_nginx:latest)" ]; then
   echo "Images exists"

   if [ "$(docker ps -q -f name=sn)" ]; then
      echo "The container is working"
      docker stop sn
   fi

   if [ "$(docker ps -aq -f status=exited -f name=sn)" ]; then
      echo "Remove container"
      docker rm sn
   fi

   if [ "$(docker images -q san_nginx:backup)" ]; then
      echo "Remove old backup"
      docker rmi san_nginx:backup
   fi

   echo "Backup image san_nginx to san_nginx:backup"
   docker tag san_nginx:latest san_nginx:backup
   docker rmi san_nginx:latest

else
   echo "No such images"
fi

docker build -t san_nginx .
docker run --rm -d -p 80:80 --name sn san_nginx
sleep 5
STATUS_CODE=$(curl -sL -w "%{http_code}" localhost:80 -o /dev/null)

if [ "$(docker ps -q -f name=sn)" ] && [ "$STATUS_CODE" == "200" ]; then
   echo "Container running and Nginx has come up and ready to use"
   docker rmi san_nginx:backup
else
   echo "ERROR. Container not running. Nginx returned CODE: $STATUS_CODE. Rollback"

   if [ "$(docker ps -aq -f status=exited -f name=sn)" ]; then
      echo "Remove bad container"
      docker rm sn
   fi

   if [ "$(docker images -q san_nginx:backup)" ]; then
      echo "Rollback previous image"
      docker rmi san_nginx:latest
      docker tag san_nginx:backup san_nginx:latest
      docker rmi san_nginx:backup
   fi

   if [ "$(docker images -q san_nginx:latest)" ]; then
      echo "Start previous image"
      docker run -dit --name sn -p 80:80 san_nginx:latest

      if [ "$(docker ps -q -f name=sn)" ]; then
         echo "Container running"
      else
         echo "ERROR! Container not running"
      fi
   else
      echo "ERROR! Image not found"
   fi
fi
